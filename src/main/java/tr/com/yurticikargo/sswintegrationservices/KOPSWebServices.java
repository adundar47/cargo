
package tr.com.yurticikargo.sswintegrationservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "KOPSWebServices", targetNamespace = "http://yurticikargo.com.tr/sswIntegrationServices", wsdlLocation = "http://webservices.yurticikargo.com:8080/KOPSWebServices/WsReportWithReferenceServices?wsdl")
public class KOPSWebServices
    extends Service
{

    private final static URL KOPSWEBSERVICES_WSDL_LOCATION;
    private final static WebServiceException KOPSWEBSERVICES_EXCEPTION;
    private final static QName KOPSWEBSERVICES_QNAME = new QName("http://yurticikargo.com.tr/sswIntegrationServices", "KOPSWebServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://webservices.yurticikargo.com:8080/KOPSWebServices/WsReportWithReferenceServices?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        KOPSWEBSERVICES_WSDL_LOCATION = url;
        KOPSWEBSERVICES_EXCEPTION = e;
    }

    public KOPSWebServices() {
        super(__getWsdlLocation(), KOPSWEBSERVICES_QNAME);
    }

    public KOPSWebServices(WebServiceFeature... features) {
        super(__getWsdlLocation(), KOPSWEBSERVICES_QNAME, features);
    }

    public KOPSWebServices(URL wsdlLocation) {
        super(wsdlLocation, KOPSWEBSERVICES_QNAME);
    }

    public KOPSWebServices(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, KOPSWEBSERVICES_QNAME, features);
    }

    public KOPSWebServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KOPSWebServices(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WsReportWithReferenceServices
     */
    @WebEndpoint(name = "WsReportWithReferenceServicesPort")
    public WsReportWithReferenceServices getWsReportWithReferenceServicesPort() {
        return super.getPort(new QName("http://yurticikargo.com.tr/sswIntegrationServices", "WsReportWithReferenceServicesPort"), WsReportWithReferenceServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WsReportWithReferenceServices
     */
    @WebEndpoint(name = "WsReportWithReferenceServicesPort")
    public WsReportWithReferenceServices getWsReportWithReferenceServicesPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://yurticikargo.com.tr/sswIntegrationServices", "WsReportWithReferenceServicesPort"), WsReportWithReferenceServices.class, features);
    }

    private static URL __getWsdlLocation() {
        if (KOPSWEBSERVICES_EXCEPTION!= null) {
            throw KOPSWEBSERVICES_EXCEPTION;
        }
        return KOPSWEBSERVICES_WSDL_LOCATION;
    }

}
